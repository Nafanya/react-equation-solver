{"version":3,"sources":["panels/Home.js","panels/QuadraticEquation.js","App.js","sw.js","index.js"],"names":["Home","id","go","header","mode","expandable","onClick","setState","activePanel","osName","platform","QuadraticEquation","props","state","a","b","c","error","handleChange","bind","value","isNaN","newState","this","d","x","Math","round","Number","EPSILON","console","log","JSON","stringify","sqrtD","roundNumber","sqrt","x1","abs","x2","left","data-to","IOS","type","defaultValue","onInput","e","target","Provider","Node","formula","React","Component","App","useState","setActivePanel","currentTarget","dataset","to","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","isLocalhost","Boolean","window","location","hostname","match","connect","send","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c13cebc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\n\nconst Home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Калькулятор уравнений</PanelHeader>\n\n\t\t<Group header={<Header mode=\"secondary\">Уравнения</Header>}>\n\t\t\t<List>\n\t\t\t\t<Cell expandable onClick={() => this.setState({ activePanel: 'quadratic' })}>Квадратичные уравнения</Cell>\n\t\t\t</List>\n\t\t</Group>\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\nimport {platform, IOS} from \"@vkontakte/vkui\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport FormStatus from \"@vkontakte/vkui/dist/components/FormStatus/FormStatus\";\n\nimport MathJax from 'react-mathjax';\nimport MathJaxProvider from \"react-mathjax/lib/Provider\";\n\nconst osName = platform();\n\nclass QuadraticEquation extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            a: 2,\n            b: 4,\n            c: -3,\n            error: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(value, id) {\n        let error = false;\n        if (isNaN(value)) {\n            error = \"Не число\"\n        }\n        const newState = {\n            ...this.state\n        };\n        newState[id] = value;\n\n        const [a, b, c] = [newState.a, newState.b, newState.c];\n        const d = b * b - 4 * a * c;\n        if (d < 0) {\n            error = 'Дискриминант меньше 0'\n        }\n\n        newState.d = d;\n        newState.error = error;\n\n        this.setState(newState);\n        // console.log('new state: ' + JSON.stringify(this.state));\n    }\n\n    roundNumber(x) {\n        return Math.round( x * 100 + Number.EPSILON ) / 100;\n    }\n\n    render() {\n        console.log('new state: ' + JSON.stringify(this.state));\n        const [a, b, c, error] = [this.state.a, this.state.b, this.state.c, this.state.error];\n        const d = b * b - 4 * a * c;\n        const sqrtD = this.roundNumber(Math.sqrt(d));\n        const isDZero = Math.abs(d) < Number.EPSILON;\n        const x1 = this.roundNumber(-b + Math.sqrt(d)) / (2*a);\n        const x2 = this.roundNumber(-b - Math.sqrt(d)) / (2*a);\n\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n                    </PanelHeaderButton>}\n                >\n                    Квадратное уравнение\n                </PanelHeader>\n                <FormLayout>\n                    <Input type='number' defaultValue='2' onInput={e => this.handleChange(e.target.value, 'a')}/>\n                    <Input type='number' defaultValue='-4' onInput={e => this.handleChange(e.target.value, 'b')}/>\n                    <Input type='number' defaultValue='3' onInput={e => this.handleChange(e.target.value, 'c')}/>\n                    {error &&\n                    <FormStatus header=\"Дискриминант меньше 0\" mode=\"error\">\n                        Дискриминант меньше 0, действительных корней нет\n                    </FormStatus>\n                    }\n                </FormLayout>\n                {!error &&\n                <Div>\n                    <MathJax.Provider>\n                        <p>Решение:</p>\n                        <MathJax.Node formula={\"x = {-b \\\\pm \\\\sqrt{b^2-4ac} \\\\over 2a}.\"} />\n                        <p>Найдём дискриминант:</p>\n                        <MathJax.Node formula={\"D = b^2 - 4ac\"} />\n                        <MathJax.Node formula={`D = ${b}^2 - 4\\\\cdot${a}\\\\cdot${c} = ${d}`} />\n                        <MathJax.Node formula={`\\\\sqrt{D} = ${sqrtD}`} />\n                        <p>Дискриминант не отрицателен, найдём корни:</p>\n                        <MathJax.Node formula={`x_1 = {-b + \\\\sqrt{D} \\\\over{2a}} = {-${b} + ${sqrtD}\\\\over{${a*2}}} = ${x1}`} />\n                        <MathJax.Node formula={`x_2 = {-b - \\\\sqrt{D} \\\\over{2a}} = {-${b} - {${sqrtD}} \\\\over{${a*2}}} = ${x2}`} />\n                    </MathJax.Provider>\n                </Div>\n                }\n            </Panel>\n        );\n    }\n}\n\nQuadraticEquation.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default QuadraticEquation;","import React, { useState} from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport QuadraticEquation from './panels/QuadraticEquation';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('quadratic');\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' go={go} />\n\t\t\t<QuadraticEquation id='quadratic' go={go} />\n\t\t</View>\n\t);\n};\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}